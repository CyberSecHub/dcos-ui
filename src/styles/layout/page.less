/* Page */
.page {
  position: relative;
  display: flex;
  flex: 1;
  top: 0px;
  left: 0px;
  height: 100%;
  width: 100%;
  overflow: hidden;
  .transition(e('left 0.3s ease, margin-left 0.3s ease'));

  /* Page Header */
  .page-header {
    .clearfix();

    /* Page Header Context */
    .page-header-context {
      width: 100%;
      .tabs {
        li {
          &.active {
            &:after {
              .opacity(0.0);
            }

            .page-header-title {
              color: @white;
            }
          }

          &:not(.active) {
            .page-header-title {
              color: color-lighten(@neutral, 40);
            }
          }
        }
      }

      /* Page Header Sidebar Toggle */
      .page-header-sidebar-toggle {
        float: left;
        cursor: pointer;

        .page-header-sidebar-toggle-icon {
          margin-right: (@base-spacing-unit * 1.0);
          .opacity(0.40);
        }

        .page-header-sidebar-toggle-label {
          display: none;
        }

        &:hover {
           .page-header-sidebar-toggle-icon {
            .opacity(0.80);
          }
        }

        &:active {
           .page-header-sidebar-toggle-icon {
            .opacity(0.40);
          }
        }
      }
    }

    /* Page Header Actions */
    .page-header-actions {
      float: right;
    }

    /* Page Header Navigation */
    .page-header-navigation {
      clear: both;
      margin-bottom: -@container-pod-short-padding-vertical;
    }
  }
}

.page-content {

  // When the content of pages need to fill the height of the page (and not
  // exceed that height), the page content wrapper height needs to be explicitly
  // 100%. We also want to set a sane minimum size.
  .page-content-fit-height {
    height: 100%;
    min-height: 300px;

    .page-content-fill {

      // This targets the direct descendent of the element that is meant to fill
      // the page's content. Specifically, this is necessary to target the
      // generic div that wraps our table component.
      > div {
        display: flex;
        flex-direction: column;
        flex-grow: 1;
      }

      .gm-scrollbar-container {
        flex-grow: 1;
      }
    }
  }
}

/* Screen Size: Mini (@screen-mini) and above */
& when (@screen-mini-enabled) {
  @media (min-width: @screen-mini) {

  }
}

/* Screen Size: Small (@screen-small) and above */
& when (@screen-small-enabled) {
  @media (min-width: @screen-small) {

    /* Page */
    .page {
      margin-left: (2 * (@base-spacing-unit-screen-small * 0.5)) + @icon-medium-width;;
      .transition(none);
      position: relative;
      height: 100%;
      width: auto;

      /* Page Header */
      .page-header {
        .page-header-context {
          .page-header-sidebar-toggle {
            display: none;
          }
        }

        /* Page Header Navigation */
        .page-header-navigation {
          margin-bottom: -@container-pod-short-padding-vertical-screen-small;
        }
      }
    }
  }
}

/* Screen Size: Medium (@screen-medium) and above */
& when (@screen-medium-enabled) {
  @media (min-width: @screen-medium) {

    /* Page */
    .page {
      margin-left: 250px;

      /* Page Header */
      .page-header {

        /* Page Header Navigation */
        .page-header-navigation {
          margin-bottom: -@container-pod-short-padding-vertical-screen-medium;
        }
      }
    }
  }
}

/* Screen Size: Large (@screen-large) and above */
& when (@screen-large-enabled) {
  @media (min-width: @screen-large) {

    /* Page */
    .page {
      margin-left: 300px;

      /* Page Header */
      .page-header {

        /* Page Header Navigation */
        .page-header-navigation {
          margin-bottom: -@container-pod-short-padding-vertical-screen-large;
        }
      }
    }
  }
}
